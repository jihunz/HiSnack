<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="product">
	<sql id="search">
		<where>
			<if test="search == 1">
				<!-- 관리자 페이지에서 사용하는 where 문 -->
				product.code LIKE CONCAT('%', #{keyword}, '%')
				OR product.name LIKE CONCAT('%', #{keyword}, '%')
				OR product.manufacture LIKE CONCAT('%', #{keyword}, '%')
			</if>
			<if test="search == 2">
				<!-- 쇼핑몰 페이지에서 사용하는 where 문 -->
				product.name LIKE CONCAT('%', #{keyword}, '%')
				<if test="option == 1">
					<!-- 가격이 1000원 이하 -->
					<![CDATA[AND price <= 1000]]>
				</if>
				<if test="option == 2">
					<!-- 가격이 2000원 이하 -->
					<![CDATA[AND price <= 2000]]>
				</if>
				<if test="option == 3">
					<!-- 가격이 3000원 이하 -->
					<![CDATA[AND price <= 3000]]>
				</if>
				<if test="option == 4">
					<!-- 가격이 3000원 이상 -->
					<![CDATA[AND price >= 3000]]>
				</if>
				<if test="option == 5">
					<!-- 가격이 4000원 이상 -->
					<![CDATA[AND price >= 4000]]>
				</if>
			</if>
		</where>
	</sql>
	<sql id="order">
		<if test="order == 1">
			<!-- 가격이 낮은 순 -->
			ORDER BY price
		</if>
		<if test="order == 2">
			<!-- 가격이 높은 순 -->
			ORDER BY price DESC
		</if>
	</sql>
	
	<resultMap type="Product" id="ProductMap">
		<id column="code" property="code"/>
		<result column="name" property="name"/>
		<result column="price" property="price"/>
		<result column="manufacture" property="manufacture"/>
		<result column="info" property="info"/>
		<collection property="images" column="image_code" ofType="Image" javaType="ArrayList">
			<id column="image_code" property="code"/>
			<result column="target" property="target"/>
			<result column="filename" property="filename"/>
			<result column="uuid" property="uuid"/>
		</collection>
		<collection property="tags" column="product_tag" ofType="ProductTag" javaType="ArrayList">
			<id column="tag_code" property="code"/>
			<result column="tcode" property="tcode"/>
			<result column="pcode" property="pcode"/>
			<result column="content" property="content"/>
		</collection>
	</resultMap>

	<insert id="add">
		INSERT INTO product
		VALUES(NULL, #{name}, #{price}, #{manufacture}, #{info})
		
		<selectKey keyProperty="code" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="item" resultMap="ProductMap">
		SELECT product.*, 
		product_image.code AS image_code, target, filename, uuid,
		product_tag.code AS tag_code, tcode, pcode, content
		FROM product
		LEFT OUTER JOIN product_image ON product_image.target=product.code
		LEFT OUTER JOIN product_tag ON product_tag.pcode=product.code
		LEFT JOIN tag ON tag.code = product_tag.tcode
		WHERE product.code=#{code}
	</select>
	<select id="total" resultType="Integer">
		SELECT COUNT(*)
		FROM product
		<include refid="search" />
	</select>
	<select id="list" resultType="Product">
		SELECT *
		FROM product
		<include refid="search" />
		<include refid="order"/>
		LIMIT #{offset}, #{perPage}
	</select>
	<delete id="delete">
		DELETE FROM product
		WHERE code=#{code}
	</delete>
	<update id="update">
		UPDATE product
		SET
		name=#{name},
		price=#{price},
		manufacture=#{manufacture},
		info=#{info}
		WHERE code=#{code}
	</update>
</mapper>